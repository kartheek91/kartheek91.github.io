= Color

home :: https://github.com/halostatue/color
code :: https://github.com/halostatue/color
bugs :: https://github.com/halostatue/color/issues
rdoc :: http://rubydoc.info/github/halostatue/color
continuous integration :: {<img src="https://travis-ci.org/halostatue/color.png" />}[https://travis-ci.org/halostatue/color]
test coverage :: {<img src="https://coveralls.io/repos/halostatue/color/badge.png" alt="Coverage Status" />}[https://coveralls.io/r/halostatue/color]

== Description

Color is a Ruby library to provide basic RGB, CMYK, HSL, and other colourspace
manipulation support to applications that require it. It also provides 152
named RGB colours (184 with spelling variations) that are commonly supported in
HTML, SVG, and X11 applications. A technique for generating monochromatic
contrasting palettes is also included.

The Color library performs purely mathematical manipulation of the colours
based on colour theory without reference to colour profiles (such as sRGB or
Adobe RGB). For most purposes, when working with RGB and HSL colour spaces,
this won't matter. Absolute colour spaces (like CIE L*a*b* and XYZ) and cannot
be reliably converted to relative colour spaces (like RGB) without colour
profiles.

Color 1.8 adds an alpha parameter to all <tt>#css_rgba</tt> calls, fixes a bug
exposed by new constant lookup semantics in Ruby 2, and ensures that
<tt>Color.equivalent?</tt> can only be called on Color instances.

Barring bugs introduced in this release, this (really) is the last version of
color that supports Ruby 1.8, so make sure that your gem specification is set
properly (to <tt>~> 1.8</tt>) if that matters for your application. This
version will no longer be supported one year after the release of color 2.0.

== History

Color is the result of a project merge between color.rb 0.1.0 by
Matt Lyon and color-tools 1.3 by Austin Ziegler. Please see History.txt for
details on the changes this merge brings.

Color::Palette::MonoContrast was developed based on techniques described by
Andy “Malarkey” Clarke[1], implemented in JavaScript by Steve G. Chipman at
SlayerOffice[2] and by Patrick Fitzgerald of BarelyFitz[3] in PHP.

[1] http://www.stuffandnonsense.co.uk/archives/creating_colour_palettes.html
[2] http://slayeroffice.com/tools/color_palette/
[3] http://www.barelyfitz.com/projects/csscolor/

:include: Code-of-Conduct.rdoc

:include: Contributing.rdoc

:include: Licence.rdoc
